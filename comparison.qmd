---
title: "Comparison of high-dimensional Methods"
author: "Giulio Benedetti"
editor: visual
---

```{r}
#| label: setup
#| include: FALSE

# Import utilities
source("funs.R")
library(ggplot2)
library(ggrepel)
library(patchwork)
library(ggVennDiagram)

# Set chunks options
knitr::opts_chunk$set(warning = FALSE)
```

```{r}
#| label: import-data2
#| message: FALSE
tse <- OKeefeDSData()
```

```{r}
#| label: prepare-data2
tse <- transformAssay(tse,
                      method = "relabundance")

tse <- estimateDiversity(tse,
                         index = "shannon",
                         assay.type = "relabundance")
```

```{r}
tse <- tse[ , !is.na(tse$bmi_group)]
tse <- tse[ , !is.na(tse$nationality)]

colData(tse)$bmi_group <- as.numeric(tse$bmi_group)
colData(tse)$nationality <- as.numeric(factor(tse$nationality)) - 1

tse <- transformAssay(tse,
                      method = "clr",
                      pseudocount = 1)

tse <- tse[ , tse$timepoint.within.group == 2]
```

```{r}
med_res <- mediateAssay(tse,
                        outcome = "bmi_group",
                        treatment = "nationality",
                        assay.type = "clr",
                        boot = TRUE, sims = 300)

hima_res <- mediate_hima(A = tse$nationality,
                         M = t(assay(tse, "clr")),
                         Y = tse$bmi_group)

hdma_res <- mediate_hdma(A = tse$nationality,
                         M = t(assay(tse, "clr")),
                         Y = tse$bmi_group)

bslmm_res <- mediate_bslmm(A = tse$nationality,
                           M = t(assay(tse, "clr")),
                           Y = tse$bmi_group)
```

```{r}
med_df <- med_res %>%
  rename(mediator = Mediator) %>%
  full_join(bslmm_res$contributions, by = "mediator") %>%
  full_join(hima_res$contributions, by = "mediator",
            suffix = c("_bslmm", "")) %>%
  full_join(hdma_res$contributions, by = "mediator",
            suffix = c("_hima", "_hdma"))
```

```{r}
plot.venn <- function(med_df, cutoff,
                      pval_cols = c("ab_pv_hima",
                                    "ab_pv_hdma",
                                    "ACME_adjpval")) {
  
  lis <- lapply(med_df[ , pval_cols],
                function(col) which(col < cutoff))
  
  names(lis) <- c("hima", "hdma", "mediate")

  p <- ggVennDiagram(lis,
                     label_geom = "text",
                     label_alpha = 1) +
    scale_fill_gradient(low = "white", high = "red") +
    labs(title = paste("Cutoff:", cutoff))
  
  return(p)
}
```

```{r}
(plot.venn(med_df, 0.001) | plot.venn(med_df, 0.01)) /
  (plot.venn(med_df, 0.05) | plot.venn(med_df, 0.25)) +
  plot_layout(guides = "collect")
```

```{r}
plot.overlap <- function(med_df,
                         method1, method2,
                         xlab = method1, ylab = method2) {
  
  df <- data.frame(A = med_df[[method1]],
                   B = med_df[[method2]],
                   mediator = med_df[["mediator"]])
  
  p <- ggplot(df, aes(x = A, y = B)) +
    geom_hline(yintercept = 0.05,
               linetype = "dashed", colour = "red") +
    geom_vline(xintercept = 0.05,
               linetype = "dashed", colour = "red") +
    geom_point() +
    geom_text_repel(aes(label = mediator), size = 3) +
    labs(x = xlab, y = ylab) +
    theme_classic()
  
  return(p)
}
```

```{r}
plot.overlap(med_df,
             "ACME_adjpval", "ab_pv_hima",
             "mediate", "hima") /
plot.overlap(med_df,
             "ACME_adjpval", "ab_pv_hdma",
             "mediate", "hdma") /
plot.overlap(med_df,
             "ab_pv_hima", "ab_pv_hdma",
             "hima", "hdma")
```
